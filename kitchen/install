#!/usr/bin/env python

import shutil, os, stat, sys
from compileall import *

PROG_VERSION = '2011.101'

#   Location of PASSCAL distribution
ROOTDIR = '/opt/python'
#
if len(sys.argv) > 1 :
    ROOTDIR = sys.argv[1]
elif os.environ.has_key ('KITCHEN') :
    ROOTDIR = os.environ['KITCHEN']
else :
    sys.stderr.write ("KITCHEN environment variable not set!\n")
    sys.exit ()

PROGDIR = os.getcwd ()
PROG = os.path.basename (PROGDIR)
LIBDIR = os.path.join (ROOTDIR, 'apps')
BINDIR = os.path.join (ROOTDIR, 'bin')
LIBPROG = os.path.join (LIBDIR, PROG)
PYTHON = os.path.join (BINDIR, 'pnpython2')

PROGS = ('125a2ph5',
         '1302ph5',
	 'batch2dep',
         'churn-array-deploy-times',
	 'das_start_stop',
	 'das_start_stop_kef_gen',
         'dumpreports',
         'dep2ph5',
	 'depcheck',
         'geod2kef',
         'initialize-ph5',
         'kef2ph5',
         'kmz-builder',
         'ph5toseg',
         'report2ph5',
         'query-ph5',
         'report2ph5',
         'meta-data-gen',
         'sort-kef-gen',
         'tabletokef',
         'time-kef-gen',
         'tsp2dep',
         'txn2segy2dep',
	 'map-gen',
         'fix_num_samples',
	 'fix_das_chan_num',
	 'set_deploy_pickup_times',
         'create_empty_sort_array',
	 'novitiate',
	 'recvorder',
         'dumpsgy',
         'fix_3chan_texan',
         'obsipshot2dep',
         'sort-recv-dep',
	 'recreate-external-references',
         'ph5tods')

LIBS  = ('columns',
         'Dep',
	 'decimate',
         'Experiment',
         'ebcdic',
	 'firfilt_py',
         'ibmfloat',
         'Kef',
         'pn125',
         'pn130',
         'RT_130_h',
         'Sfactory',
         'SEGY_h',
         'TimeDoy',
	 'SimpleMap',
         'cs2cs')

EXTS = ('surt_130_py.py', 'sufirfilt_py.py', 'surt_125a_py.py',)

'''
#   Delete libs
for p in LIBS :
    p = p + '.pyc'
    try :
        os.remove (p)
    except OSError :
        pass
    
#   Compile
compile_dir (".")
'''
#   Make libs dir
command = 'mkdir -p ' + LIBDIR
os.system (command)
'''
#   Remove old libs
try :
    shutil.rmtree (LIBPROG)
except OSError :
    pass
'''

command = 'mkdir -p ' + BINDIR
os.system (command)

#   install programs
for p in PROGS :
    src = p
    dst = BINDIR + '/' + p
    '''
    try :
        os.remove (dst)
    except OSError :
        pass
    '''
    print src, dst
    shutil.copy (src, dst)
    os.chmod (dst, 0755)
'''
#   compile extensions
for e in EXTS :
    print "Compiling extension " + e
    command = PYTHON + " " + e + " clean --build-lib=."
    os.system (command)
    command = PYTHON + " " + e + " build --build-lib=."
    os.system (command)
'''
#   install libraries
shutil.copytree (PROGDIR, LIBPROG)
