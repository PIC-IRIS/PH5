Processing steps to build SOAD.ph5:

1) Gather needed input files, raw TRD files, das file, shot file, geometry file (TSP input files).

2) Run tsp2dep to convert the TSP input files into a dep file as produced by rawmeet.

3) Create a kef (Kitchen Exchange Format) file to describe the experiment. See example below.

#   Start of file SOAD-experiment.kef
/Experiment_g/Experiment_t
        PIs_s = Dr. G. Randy Keller, Dr. Steven H. Harder, Dr. Kate C. Miller, Dr. Catherine M. Snelson
        institutions_s = University of Oklahoma, University of Texas, El Paso, University of Nevada at Las Vegas
        longname_s = Spears Ranch Seismic Experiment Survey
        nickname_s = SOAD
        north_west_corner/X/units_s = degrees
        north_west_corner/X/value_d = -96.654163
        north_west_corner/Y/units_s = degrees
        north_west_corner/Y/value_d = 34.452259
        north_west_corner/Z/units_s = meters
        north_west_corner/Z/value_d = 315
        north_west_corner/coordinate_system_s = mercator
        north_west_corner/description_s = Estimated elevation
        north_west_corner/ellipsoid_s = WGS84
        north_west_corner/projection_s = None
        south_east_corner/X/units_s = degrees
        south_east_corner/X/value_d = -96.645916
        south_east_corner/Y/units_s = degrees
        south_east_corner/Y/value_d = 34.435873
        south_east_corner/Z/units_s = meters
        south_east_corner/Z/value_d = 315
        south_east_corner/coordinate_system_s = mercator
        south_east_corner/description_s = Estimated elevation
        south_east_corner/ellipsoid_s = WGS84
        south_east_corner/projection_s = None
        summary_paragraph_s = A 2-D seismic reflection experiment on the Spears Ranch in Oklahoma. The purpose is to image the Arbuckle-Simpson aquifer.
        time_stamp/ascii_s = Thu Jun 28 14:58:00 2007
        time_stamp/epoch_l = 1183064280
        time_stamp/micro_seconds_i = 0
        time_stamp/type_s = "BOTH"
#   End of file

4) Run initialize-ph5 to create a ph5 file for the experiment.

usage: initialize-ph5 [--help]--kef=kef_file --nickname=output_file

Program to initialize PH5 file at start of experiment. The kef file should
contain information for experiment table /Experiment_g/Experiment_t.

options:
  -h, --help            show this help message and exit
  -n output_file, --nickname=output_file
                        Experiment nickname.
  -k kef_file, --kef=kef_file
                        Kitchen Exchange Format file containing experiment
                        info.

flow@localhost% initialize-ph5 -n SOAD -k SOAD-experiment.kef

5) Process the raw TRD files and the dep file into the ph5 file using 125a2ph5.

usage: 125a2ph5 [--help][--dep dep_file][--kef kef_file][--raw raw_file | --file file_list_file] --nickname output_file_prefix

Read a raw texan files and optionally a kef file into ph5 format.

options:
  -h, --help            show this help message and exit
  -r raw_file, --raw=raw_file
                        RT-125(a) texan raw file
  -f file_list_file, --file=file_list_file
                        File containing list of RT-125(a) raw file names.
  -n output_file_prefix, --nickname=output_file_prefix
                        The ph5 file prefix (experiment nick name).
  -k kef_file, --kef=kef_file
                        Kitchen Exchange Format file.
  -d dep_file, --dep=dep_file
                        Rawmeet dep file.

This program takes as input a file containing a list of raw TRD files and the dep 
file created above.

flow@localhost% head SOAD-file-list.txt
RAW/I2631RAW.TRD
RAW/I2810RAW.TRD
RAW/I1554RAW.TRD
...
RAW/I2496RAW.TRD

flow@localhost% head SOAD.dep
# tsp2dep Version: 2007.177 dep Version: 0007.107 TSP Version: 3.1 Run: Tue Jun 26 09:16:46 2007
SHOT;1000;1000;1;N34.450543;W96.651557;306.116000;2007:151:15:01:0;;;;;;;;
SHOT;1002;1002;1;N34.450183;W96.651565;307.655000;2007:151:15:07:0;;;;;;;;
...
RECV;12839;2036;2;texan;1;;;N34.448596;W96.645643;308.465000;;;;;

flow@localhost% 125a2ph5 -n SOAD -d SOAD.dep -f SOAD-file-list.txt 

6) Calculate offsets and insert them into the ph5 file using geod2kef then kef2ph5.

usage: geod2kef --nickname output_file_prefix [--path][-h][--listellipsoids][--listunits][-U units][-E ellipsoid]

Read locations and calculate offsets from events to receivers. Produce kef
file to populate ph5 file.

options:
  -h, --help            show this help message and exit
  -n output_file_prefix, --nickname=output_file_prefix
                        The ph5 file prefix (experiment nick name).
  -p output_file_path, --path=output_file_path
                        Path to directory containing ph5 files. Defaults to
                        current directory
  -U output_units       Units to output offsets in. (Use -u to get list of
                        acceptable units.) Default == 'm' (meters)
  -E calculation_ellipsoid
                        Ellipsoid to use. (Use -e to get a list of acceptable
                        ellipsoids.) Default == 'WGS84'
  -e, --listellipsoids  List available ellipsoids.
  -u, --listunits       List all available output units.

Geometry is in geodetic units and meters, which are the defaults for geod2kef
as well as ph5.

flow@localhost% geod2kef -n SOAD > SOAD-Offset_t.kef

Note: geod2kef writes to stdout.

Insert insert the offsets into the ph5 file using kef2ph5.

usage: kef2ph5 --kef kef_file --nickname ph5_file_prefix [--path path]

Update a ph5 file from a kef file.

options:
  -h, --help            show this help message and exit
  -n OUTFILE, --nickname=OUTFILE
                        The ph5 file prefix (experiment nickname).
  -k KEFFILE, --kef=KEFFILE
                        Kitchen Exchange Format file.
  -p PATH, --path=PATH  Path to directory where ph5 files are stored.
  -c, --check           Show what will be done but don't do it!

flow@localhost% kef2ph5 -n SOAD -k SOAD-Offset_t.kef -c

If no errors, then run:

flow@localhost% kef2ph5 -n SOAD -k SOAD-Offset_t.kef

7) Since the input files were in TSP format and not dep format some of the information
we know is not in the ph5 file yet. This is easy to add. This example adds information
about the sensors used. First we dump a table to kef format, then edit the kef file
and use it to update the ph5 file. We first run table2kef.

usage: tabletokef --nickname ph5-file-prefix options

Dump a table to a kef file.

options:
  -h, --help            show this help message and exit
  -n ph5_file_prefix, --nickname=ph5_file_prefix
                        The ph5 file prefix (experiment nickname).
  -p ph5_path, --path=ph5_path
                        Path to ph5 files. Defaults to current directory.
  -d                    
  -E, --Experiment_t    Dump /Experiment_g/Experiment_t to a kef file.
  -S, --Sort_t          Dump /Experiment_g/Sorts_g/Sort_t to a kef file.
  -O, --Offset_t        Dump /Experiment_g/Sort_g/Offset_t to a kef file.
  -V, --Event_t         Dump /Experiment_g/Sorts_g/Event_t to a kef file.
  -A n, --Array_t_=n    Dump /Experiment_g/Sorts_g/Array_t_[n] to a kef file.
  -R, --Response_t      Dump /Experiment_g/Responses_g/Response_t to a kef
                        file.
  -P, --Report_t        Dump /Experiment_g/Reports_g/Report_t to a kef file.
  -C das, --Receiver_t_=das
                        Dump /Experiment_g/Receivers_g/Das_g_[das]/Receiver_t
                        to a kef file.
  -D das, --Das_t=das   Dump /Experiment_g/Receivers_g/Das_g_[das]/Das_t to a
                        kef file.

Dump Array_t_001:

flow@localhost% tabletokef -n SOAD -A 1 > SOAD-Array_t_001.kef

Now we edit SOAD-Array_t_001.kef and replace each instance of
/Experiment_g/Sorts_g/Array_t_001
with
/Experiment_g/Sorts_g/Array_t_001:Update:id_s

and
sensor/model_s =
with
sensor/model_s = 4.5Hz Vertical

#   Start of file
#
#       Wed Jun 27 13:49:26 2007        ph5 version: 2007.121 Bleeding
#
#   Table row 1
/Experiment_g/Sorts_g/Array_t_001:Update:id_s
        id_s = 1000
        location/Y/value_d = 34.450543
        location/Y/units_s = degrees
        location/X/value_d = -96.651557
        location/X/units_s = degrees
        location/Z/value_d = 306.116
        location/Z/units_s = meters
        location/coordinate_system_s = 
        location/projection_s = 
        location/ellipsoid_s = 
        location/description_s = 
        deploy_time/ascii_s = 
        deploy_time/epoch_l = -1
        deploy_time/micro_seconds_i = 0
        deploy_time/type_s = 
        pickup_time/ascii_s = 
        pickup_time/epoch_l = -1
        pickup_time/micro_seconds_i = 0
        pickup_time/type_s = 
        das/serial_number_s = 11642
        das/model_s = texan rt125a
        das/manufacturer_s = RefTek 
        das/notes_s = 
        sensor/serial_number_s = 
        sensor/model_s = 4.5Hz Vertical 
        sensor/manufacturer_s = GeoSpace Corp. 
        sensor/notes_s = 
        description_s = 
        channel_number_i = 1
#   Table row 2
/Experiment_g/Sorts_g/Array_t_001:Update:id_s
        id_s = 1001
        location/Y/value_d = 34.450362
        location/Y/units_s = degrees
        location/X/value_d = -96.651558
        location/X/units_s = degrees
        location/Z/value_d = 306.893
        location/Z/units_s = meters
        location/coordinate_system_s = 
        location/projection_s = 
        location/ellipsoid_s = 
        location/description_s = 
        deploy_time/ascii_s = 
        deploy_time/epoch_l = -1
        deploy_time/micro_seconds_i = 0
        deploy_time/type_s = 
        pickup_time/ascii_s = 
        pickup_time/epoch_l = -1
        pickup_time/micro_seconds_i = 0
        pickup_time/type_s = 
        das/serial_number_s = 11584
        das/model_s = texan rt125a
        das/manufacturer_s = RefTek 
        das/notes_s = 
        sensor/serial_number_s = 
        sensor/model_s = 4.5Hz Vertical 
        sensor/manufacturer_s = GeoSpace Corp. 
        sensor/notes_s = 
        description_s = 
        channel_number_i = 1
...
#   Table row 77
/Experiment_g/Sorts_g/Array_t_001:Update:id_s
        id_s = 1076
        location/Y/value_d = 34.43691
        location/Y/units_s = degrees
        location/X/value_d = -96.651993
        location/X/units_s = degrees
        location/Z/value_d = 307.475
        location/Z/units_s = meters
        location/coordinate_system_s = 
        location/projection_s = 
        location/ellipsoid_s = 
        location/description_s = 
        deploy_time/ascii_s = 
        deploy_time/epoch_l = -1
        deploy_time/micro_seconds_i = 0
        deploy_time/type_s = 
        pickup_time/ascii_s = 
        pickup_time/epoch_l = -1
        pickup_time/micro_seconds_i = 0
        pickup_time/type_s = 
        das/serial_number_s = 12515
        das/model_s = texan rt125a
        das/manufacturer_s = RefTek 
        das/notes_s = 
        sensor/serial_number_s = 
        sensor/model_s = 4.5Hz Vertical 
        sensor/manufacturer_s = GeoSpace Corp. 
        sensor/notes_s = 
        description_s = 
        channel_number_i = 1
#   End of file

Now run kef2ph5. This will update /Experiment_g/Sorts_g/Array_t_001, keying
the update on the value of id_s.

flow@localhost% kef2ph5 -n SOAD -k SOAD-Array_t_001.kef -c
then if no errors
flow@localhost% kef2ph5 -n SOAD -k SOAD-Array_t_001.kef

Note: We also updated /Experiment_g/Sorts_g/Event_t to contain
information about the size and depth of the shots.

8) Create /Experiment_g/Sorts_g/Sort_t. This was done by looking at the recording windows
and the arrays and then creating a kef file. (To be automated in the near future)

9) Create data_description.txt, and data_request_key.txt. (To be automated in the near future)
