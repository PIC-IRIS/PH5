Master:
ph5
 * Make Ph5 availability accout for metadata content.
 * Split avaiabiity information on metadata epochs
 * fixed malformed created timestamp in stationxml from ph5tostationxml
   and added testcase to ensure timestamps are well formed
 * fixed errors in entry_points.py that prevented apps from executing.
 * fixed: seg2toph5, ph5toevt.
 * Deleted: ph5view (doesn't compile, was a W.I.P. left to wither)
 * made pep8 compliant
 * update all modules to use a standardized logger (issue #213)
 * cleanup comments and remove commented out code (issue #216)
 * replace deprecated optparse with argparse module.
 * update ph5 to better install c requirements
 * Add fix_srm command to change srm values from 0 to 1 or add srm=1 in case that column is missing in das tables or array tables.
 * Add fix_das_t_order command to fix das_t's order according to channel and time
ph5.utilities.ph5
 * add helpfile to utilities folder. Have not added pointer in setup.py as yet.
 * Typing ph5 shows user the choices for help information.
 * Usage: ph5 pforma (lists info about pforma)https://github.com/PIC-IRIS/PH5/pull/new/helpfile
ph5.clients.ph5toms
 * added option to change file naming scheme
 * add day volume cuts
 * add cut length to ph5toms for webservices
 * Fix bug causing duplicate data to be written (issue #264)
 * Fix bug causing data to not be written in special cases at the start of the data in PH5
 * Slight change to naming output on command line for more consistency
 * No longer adds extra sample at end of cut
 * Fix substring issue
 * Add ph5toms support for the web service SEG-Y timeseries data format.
 * Fix bug where starttime offset was applied after calculating the end time of a shot gather request
 * Add web service hooks for reciever gather request type
 * Correctly write all requested channel components (issue #374)
ph5.utilities.report_gen
 * add report_gen entry point to setup.py
ph5.utilities.pformagui
 * added North South designation to pforma
 * Displayed current utm zone (issue #234)
ph5.utilities.segdtoph5
 * Fixed bug causing pforma to finish correctly on node (issue #233)
 * fixed bug in utmzone processing
 * Fixed bug in smartsolo reading causing incorrect time conversions from BCD
 * Work with SmartSolo in which entries of same deployment (no gaps) are combined into one
 * Fixed SmartSolo's das_t not in correct order of channel and time
 * (segdreader_smartsolo) modify to work with changes in SS header to show negative in location
ph5.core.experiment
 * fixed bug found by Natalie (issue #231)
 * fix fast offset_table reading (issue #280)
 * fix read_das and read_arrays to throw error is sample_rate_multiplier_is=0 or is missing
 * if table is empty, not try to check for sample_rate_multiplier_i, but give a warning message
 * change function nuke_das_t to truncate_das_t
ph5.clients.tests.test_ph5toms
 * fixed bug in stationCut call
ph5.utilities.validation
 * keep common validation for both ph5tostationxml and ph5validate
 * Check for location errors and warnings
ph5.clients.ph5tostationxml
 * Limit number of asynchronous processes
 * Remove storage format from the sxml channel level to be compatible with sxml version 1.1
 * ph5tostationxml now correctly handles stations with multiple deployments (issue #318)
 * Add a new custom iris namespace attribute called iris:PH5ReportNum to the network StationXML element
 * Remove the report number from the alternateCode value in the network StationXML element
 * Round latitude and longitude to 6 decimal places in stationxml to match SEED maximum
 * Round elevation to 1 decimal place in stationxml to match SEED maximum
 * fix incorrectly retrieving network time
 * checking response table's issue: filename, data, duplication
 * Entry that is excess intersection will not be logged and will not be included in xml
 * Entry that has location out of range will be logged as error and will not be included in xml
 * Entry that has location value=0 or no location unit will be logged as warning and will be included in xml
 * In case of no response data can be returned because of error, not return empty response but throw error instead. Use flag -E/--emp_resp if want to add empty response for debugging
 * In case of other bugs, not create stationxml. Use flag --stationxml_on_error to create stationxml if bug present in the data
 * Multiprocessing has been removed because when checking subfolders of the given path, multiprocessing make the logging messages show up randomly. Using 'for loop' instead help users recognize which one the messages are for. That way ph5tostationxml can inform when never stationxml has or has not been created for a ph5 data.
ph5.clients.ph5availability
 * New client for returning timeseries availability information
 * Consider array time instead of das time only
ph5.utilities.ph5validate
 * add data time checking
 * fix incorrectly detecting data between different deploy/pickup times
 * add checking response table's issue: filename, data, duplication
 * detecting repeated stations
 * move checking for location errors and warnings to validation
 * correct logging to be the same as other tools
 * modify checking limit for station id to [0, 32767], event id to [0, 2147483647];
 * remove error 'No Event location/Z/value_d value found.'
 * add das_t's order check according to channel and time
ph5.utilities.test.test_ph5validate
 * unittest for ph5validate
ph5.utilities.sort_kef_gen.py
 * add -o option for file output
ph5.utilities.time_kef_gen.py
 * add -o option for file output
 * fix bug getting only the last to_froms of all soh for a das
ph5.utilities.tabletokef.py
 * add -o option for file output
 * add flag -i/--ignore to bypass error thrown for srm=0 or missing when creating kef file.
ph5.utilities.report_gen
 * fix crash on no event table (issue #219)
ph5.utilities.dumpfair
 * fix piping bug (issue #270)
ph5.utilities.seg2toph5
 * fix bug missing variable
 * Make compatible for pforma
 * Add flag -r/--raw
 * Make compatible with both Obspy 1.1.1 and 1.2.2
ph5.utilities.pforma_io
 * add smartsolo to pforma
 * add seg2 to pforma
 * fix bug that duplicate index_t and array_t when copy tables from A/master.ph5 to Sigma/master.ph5
ph5.utilities.125atoph5
 * fix pforma support after LOGGER change
ph5.utilities.130toph5
 * fix pforma support after LOGGER change
ph5.clients.ph5torec
 * fix info level logging and remove global variables
ph5.clients.ph5toevt
 * fix info level logging and remove global variables
ph5.utilities.obspytoph5
 * new tool for loading obspy data in to ph5
 * change -f to -r, -l to -f to be consistent with other ingestion commands
ph5.utilities.metadatatoph5
 * new tool for loading stationxml and dataless SEED
ph5.utilities.tests.test_metadatatoph5
 * unit tests for metadatatoph5; Stop sending log to screen; Apply tmpdir from test_base; Use testfixture to capture output; Use os.path.join for path
ph5.utilities.tests.test_obspytoph5
 * unit tests for obspytoph5; Stop sending log to screen; Apply tmpdir from test_base; Use testfixture to capture output; Use os.path.join for path
ph5.core.tests.test_ph5api
 * unit tests for ph5api; Stop sending log to screen;
ph5.core.ph5api
 * Indent lines 1279-1295 in ph5api cut so they are correctly included in the for loop on line 1244
 * skip ph5api cut traces that return no data. logic previously embedded in code but line 1302 is duplicated onto 1287 to prevent error from being thrown
 * fix ph5api cut sometimes returns too many samples (issue #298)
 * fix for get_availability returning incomplete results
 * fix query_das_t to throw error is sample_rate_multiplier_is=0 or is missing
 * Remove the call to read_array_t() channels() to optimize geo_kef_gen
 * fix cut()'s precision to not go over one extra sample out of the size which creating fake overlap
ph5.entry_points
 * creates a dictionary, keys are names of scripts,
      values are (1) simple description,
      (2) entry points for use by setup.
ph5.help
 * calls entry_points to print the short descriptions in alpha-order.
environment.yml
 * removed unused dependencies and added pykml as a dependency
ph5.core.test.test_base
 * use TempDirTestCase to handle temporary directory that keeps ph5 and log files created in unittests, this directory will be deleted if test successful or remained if test failed
 * use LogTestCase to disable log to be written to console in unittests, remove all handlers created in unittests except the one to capture log messages
 * add initialize_ex for creating ph5 experiment object
 * add kef_to_ph5 to add metadata table, including das_t, from kef file to ph5
ph5.clients.test.test_ph5availability
 * Unittest: Stop sending log to screen; Apply testfixtures to capture output and log; Apply tmpdir from test_base; Use os.path.join for path
ph5.core.tests.test_segd2ph5
 * Unittest: Stop sending log to screen; Apply tmpdir from test_base; Use os.path.join for path
ph5.utilities.validation
 * common functions for ph5validate and ph5tostationxml
 * functions for checking response filename, data, duplication
 * checking response_file_das_a following 2 formats: metadatatoph5 format [das_model]_[sensor_model]_[sr][cha] and resp_load format [das_model]_[sr]_[srm]_[gain]. Each part in the format will be checked, except for [cha] because different channel codes can use the same response file.
ph5.utilities.nuke_table
 * change way to remove das from truncating Das_t to removing external link to das_t
 * truncating Das_t can still be perform with flag --trunc
 * set log for nuke_table
ph5.utilities.create_ext
 * create external link to a minifile for a das

v4.1.2:
ph5.utilities.ph5validate
 * new functionality
ph5.core.ph5api
 * fix cut method
ph5.clients.ph5torec
 * Fixed bug not properly applying reduction velocity
-ph5.utilities.resp_load
 * handle missing response table data gracefully
-ph5.utilities.keftocsv
 * new utility
-ph5.utilities.csvtokef
 * new utility
-ph5.utilities.ph5tostationxml
 * Fixed bug causing arrays with same station id_s to be filtered out
 * add descriptive error message and skip master with no experiment
-ph5.utilities.kefedit
 Fixed not being able to save directly to PH5 (issue #193)
-ph5.clients.ph5view
 * Handle node > 3 channel bug
-ph5.core.segd2ph5
 * fix for reading SEG-D where the number of channel sets exceeds the number of channels (component)
-ph5.clients.ph5view
 * Better handling of experiments with missing tables
-ph5.clients.ph5toexml
 * Remove new line from geocsv field_unit header line
-ph5.utilities.kefedit
 * Fix bugs caused when loading PH5 experiment without offset tables
-ph5.clients.ph5tostationxml
 * Address issue #181
 * print to stdout by default
 -ph5.clients.ph5toms
 * Add ph5toms support for the web service GeoCSV timeseries data format.
 * Pull sample rate directly from DAS tables rather than PH5toMSeed.get_nonrestricted_segments. Allows ph5toms to work with data which != 100 Hz
v4.1.1:
-ph5.clients.ph5toexml
 * Fix case where station does not have a key of 1
 * Add geocsv format to ph5toexml that is equivalent to the shottext format
 * No longer require the user to enter a network or report number
 * No longer print to a file by default, but still provide an option. Instead print the event data to stdout by default.
 * No longer show users a stack trace. Instead show a shortened error message.
-ph5.clients.ph5toms
 * Fix ph5toms not returning data
 * Fix bug that caused ph5toms to crash when passed an empty DAS_t after filtering
-ph5.utilities.ph5_validate
 * New functionality for checking stations
-ph5.utilities.kef2kml
 * Fix bug reading kef
-ph5.utilities.kefedit
 * Fix bug reading kef

v4.1.0:
-ph5.utilities.resp_load
 * resp_load now handles nuking and loading tables for the user
-ph5.utilities.ph5validate
 * New validation utility
-ph5.utilities.pforma
 * Skip files that do not exist
-ph5.utilities.nuke_table
 * Remove Oppenheimer/Bhagavad Gita references.
-setup.py
 * Add delete_table as alias for nuke_table
-ph5.utilities.dumpfair
 * Print trace values
-ph5.utilities.time_kef_gen
 * Fixed bug caused by attemtping to run time_kef_gen on node data
-ph5.clients.ph5tostationxml
 * Always takes in to account deployments
-ph5.utilities.nuke_table
 * Nuke_table now creates file back ups
-ph5.clients.ph5toevt
 * Updated to also accept external shot files
-ph5.clients.ph5torec
 * Updated to also accept external shot files
-ph5.core.external_file
 * new core component for external array or shot files
-ph5.clients.ph5toms
 * ph5toms now uses multiprocessing
-ph5.clients.ph5toms (issue #127)
 * Updated ph5toms to write SAC header values properly
-ph5.clients.ph5toevt
  * Updated to check the array table for response_n_i
-ph5.clients.ph5torec
  * Updated to check the array table for response_n_i
-ph5.clients.ph5tostationxml
  * Added SACPZ and stationtxt to command line output option
-ph5.core.experiment
  * Add expectedrows when creating tables
-ph5.core.ph5utils
  * Doy_breakup can now accept variable time lengths for breakup. Default is 1 day
-ph5.clients.ph5tostationxml
  * Fixed array number bug
  * Use Hash for station comparison to speed up read_stations()
-ph5.clients.ph5toms
  * Fixed array number bug
  * Added LENGTH global variable to adjust file cuts
-ph5.core.ph5api
  * Enhancement in cut to be able to pass the das_t instead of rereading the das_t in cut
-ph5.core.ph5api (issue #141)
  * Addressed bug not reading all data of channels < 1 sps
-ph5.utilities.segd2ph5 (issue #138)
  * Added SEED station name to array creation
-ph5.utilities.resp_load
  * Fix array parse bug
-ph5.utilities.resp_load (issue #114)
  * New software added

v4.0.4:
-ph5.core.ph5api(issue #134)
  * fixes error catching in response table function
-setup.py
  * Standardized GUI and command line names
-ph5.utilities.pforma_io
  * Fix renaming of cl programs
-ph5.utilities.set_n_i_response
  * Fix renaming of cl programs
-ph5.clients.ph5tostationxml (issue #126)
  * Only add a network, station, or channel to inventory if it hasn;t already been added
-ph5.utilities.dumpsgy
  * Fix issues caused by adding main procedure
-ph5.utilities.ph5_merge_helper
  * Fix issues caused by adding main procedure
-ph5.utilities.fix_3chan_texan
  * Fix issues caused by adding main procedure
-ph5.utilities.index_offset_t
  * Make offset table name required
-ph5.utilities.meta_data_gen
  * Fix issues caused by adding main procedure
-ph5.utilities.unsimpleton
  * Check for failure to create hard link

v4.0.3:
-ph5.clients.ph5tostationxml (issue #111)
  * ph5tostationxml accepts list of requests for given experiment
-ph5.clients.ph5torec
  * Write node ID to log file
-ph5.clients.ph5toevt
  * Write node ID to log file
-ph5.clients.ph5view.ph5_viewer (issue #116)
  * if no config file is present create a default config file

v4.0.2
-ph5.clients.ph5toms (issue #100)
 * Fixed memory leak bug and reduced memory usage
-ph5.clients.ph5tostationxml (issue #107)
 * added receiver-id to obspy inventory and added an extra attribute at the channel level
-ph5.clients.ph5toexml
 * added to setup.py

v4.0.1
- ph5.clients.ph5tostationxml
  * updated to work with latest obspy response code

v4.0.0
- Initial Release
